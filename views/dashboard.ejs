<head>
    <title>Dashboard - Crosshatch</title>
    <link rel="stylesheet" type="text/css" href="//cdn.datatables.net/1.11.4/css/jquery.dataTables.min.css">
    <script src="//code.jquery.com/jquery-3.5.1.js"></script>
    <script src="//cdn.datatables.net/1.11.4/js/jquery.dataTables.min.js"></script>
</head>

<h1>Welcome to the dashboard.</h1>

<button onclick="start()">Start All Containers</button>

<button onclick="stop()">Stop All Containers</button>

<button onclick="kill()">Kill All Containers</button>
<br></br>

<table id="containers" class="display" style="width:100%">
    <thead>
        <tr>
            <th>Name</th>
            <th>Image</th>
            <th>State</th>
            <th>Uptime</th>
            <th>ID</th>
        </tr>
    </thead>
    <tbody>
        <% for (var i=0; i < containers_list.length; i++) { %>
            <tr id="container_<%= containers_list[i].Id %>">
                <td><a id="name_<%= containers_list[i].Id %>" href="/dashboard/container/<%= containers_list[i].Id %>">
                        <%= containers_list[i].Names[0] %>
                    </a></td>
                <td id="image_<%= containers_list[i].Id %>">
                    <%= containers_list[i].Image %>
                </td>
                <td id="state_<%= containers_list[i].Id %>">
                    <%= containers_list[i].State %>
                </td>
                <td id="status_<%= containers_list[i].Id %>">
                    <%= containers_list[i].Status %>
                </td>
                <td id="id_<%= containers_list[i].Id %>">
                    <%= containers_list[i].Id %>
                </td>
            </tr>
            <% } %>
    </tbody>
</table>

<script>
    $(document).ready(function () {
        $('#containers').DataTable();
    });
</script>

<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    const socket = new WebSocket(`ws://${window.location.host}${window.location.pathname}`);

    socket.onmessage = function (event) {
        const json = JSON.parse(event.data)

        for (var i = 0; i < json.length; i++) {
            const container = document.getElementById(`container_${json[i].Id}`);
            if (container === null) {
                const containers = document.getElementById("containers");
                containers.innerHTML += `<div id="container_${json[i].Id}">
                    <h2><a id="name_${json[i].Id}" href="/dashboard/container/${json[i].Id}">Name: ${json[i].Names[0]}</a></h2>
                    <a id="image_${json[i].Id}">Image: ${json[i].Image}</a><br>
                    <a id="state_${json[i].Id}">State: ${json[i].State}</a><br>
                    <a id="status_${json[i].Id}">Uptime: ${json[i].Status}</a><br>
                    <a id="id_${json[i].Id}">Container ID: ${json[i].Id}</a><br>
                </div>`;
            } else {
                document.getElementById(`name_${json[i].Id}`).innerHTML = `${json[i].Names[0]}`
                document.getElementById(`image_${json[i].Id}`).innerHTML = `${json[i].Image}`
                document.getElementById(`state_${json[i].Id}`).innerHTML = `${json[i].State}`
                document.getElementById(`status_${json[i].Id}`).innerHTML = `${json[i].Status}`
                document.getElementById(`id_${json[i].Id}`).innerHTML = `${json[i].Id}`
            }
        }
    }

    setInterval(function () {
        socket.send("data")
    }, 1000);
</script>

<script>
    async function start() {
        const res = await fetch("/dashboard/container/all/actions/start", { method: "POST", credentials: "same-origin" });
        const response = await res.json();
        if (response.status === 'STARTED') {
            Swal.fire({
                title: 'Success',
                text: 'The startup signal has been sent to all contianers. Please give them a minute to boot.',
                icon: 'success'
            })
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Uh Oh!',
                text: 'Something went wrong when sending the startup signal to the containers! Please try again later.',
            })
        }
    }
</script>

<script>
    async function stop() {
        const res = await fetch("/dashboard/container/all/actions/stop", { method: "POST", credentials: "same-origin" });
        const response = await res.json();
        if (response.status === 'STOPPED') {
            Swal.fire({
                title: 'Success',
                text: 'The stop signal has been sent to all contianers. Please give them a minute to shutdown.',
                icon: 'success'
            })
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Uh Oh!',
                text: 'Something went wrong when sending the stop signal to the containers! Please try again later.',
            })
        }
    }
</script>

<script>
    async function kill() {
        const res = await fetch("/dashboard/container/all/actions/kill", { method: "POST", credentials: "same-origin" });
        const response = await res.json();
        if (response.status === 'KILLED') {
            Swal.fire({
                title: 'Success',
                text: 'The kill signal has been sent to all contianers. Please give them a minute to shutdown.',
                icon: 'success'
            })
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Uh Oh!',
                text: 'Something went wrong when sending the kill signal to the containers! Please try again later.',
            })
        }
    }
</script>

<style>
    body {
        font-family: "Open Sans", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", Helvetica, Arial, sans-serif;
    }
</style>